---
# tasks file for prod
- name: Install packages
  apt:
    pkg:
      - docker.io
      - python3-pip
    update_cache: yes
    state: present

- name: Pip install docker
  pip:
    name: docker

- name: Create a volume for the artifact, setenv.sh, tomcat.service, config.yml
  community.docker.docker_volume:
    name: "{{ item }}"
  with_items:
    - 'volume'
    - 'web_data'
    - 'vol'
    - 'vol_tmp'

- name: Start a conteiner build
  community.docker.docker_container:
    name: build
    state: started
    image: syrkashevav/build:v1.0
    volumes:
      - volume:/workdir

- name: Start a conteiner tomcat
  community.docker.docker_container:
    name: tomcat
    state: started
    image: tomcat:9.0.20-jre8-alpine
    volumes:
      - volume:/usr/local/tomcat/webapps
      - web_data:/usr/local/tomcat/bin
      - vol:/etc/systemd/system
      - vol_tmp:/tmp
    ports:
      - "8081:8080"
      - "8088:8088"

- name: add JMX Prometheus JavaAgent
  copy:
    src: jmx_prometheus_javaagent-0.20.0.jar
    dest: /var/lib/docker/volumes/vol_tmp/_data

- name: Add file config.yml
  file:
    path: /var/lib/docker/volumes/vol_tmp/_data/config.yml
    state: touch

- name: Modify config.yml to add the following
  lineinfile:
    dest: /var/lib/docker/volumes/vol_tmp/_data/config.yml
    line: "{{ item }}"
    insertbefore: EOF
  with_items:
    - 'startDelaySeconds: 0'
    - 'ssl: false'
    - 'lowercaseOutputName: false'
    - 'lowercaseOutputLabelNames: false'

- name: Add file setenv.sh
  file:
    path: /var/lib/docker/volumes/web_data/_data/setenv.sh
    state: touch
    owner: root
    group: root
    mode: '0755'

- name: Modify setenv.sh to add the following
  lineinfile:
    dest: /var/lib/docker/volumes/web_data/_data/setenv.sh
    line: "{{ item }}"
    insertbefore: EOF
  with_items:
    - "\n"

- name: Create tomcat group
  group:
    name: tomcat
    system: yes
    state: present

- name: Create tomcat user
  user:
    name: tomcat
    group: tomcat
    password: pa$$w0rd
    home: "{{ path_tomcat }}"
    shell: "/bin/bash"

- name: Change owner & group of tomcat directory
  file:
    path: "{{ path_tomcat }}"
    owner: tomcat
    group: tomcat
    recurse: yes

- name: Create empty Tomcat service file tomcat.service
  file:
    path: /var/lib/docker/volumes/vol/_data/tomcat.service
    state: touch

- name: Add tomcat service details in /etc/systemd/system/tomcat.service
  blockinfile:
    path: /var/lib/docker/volumes/vol/_data/tomcat.service
    block: |
      [Unit]
      Description=Tomcat 9
      After=network.target

      [Service]
      Type=forking
      User=tomcat
      Group=tomcat
      Environment="JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64"
      Environment="JAVA_OPTS=-Djava.security.egd=file:///dev/urandom"
      Environment="CATALINA_BASE={{ path_tomcat }}"
      Environment="CATALINA_HOME={{ path_tomcat }}"
      Environment="CATALINA_PID={{ path_tomcat }}/temp/tomcat.pid"
      Environment="CATALINA_OPTS=-Xms512M -Xmx1024M -server -XX:+UseParallelGC"
      ExecStart={{ path_tomcat }}/bin/startup.sh
      ExecStop={{ path_tomcat }}/bin/shutdown.sh

      [Install]
      WantedBy=multi-user.target

- name: Restart a container tomcat
  community.docker.docker_container:
    name: tomcat
    state: started
    image: tomcat:9.0.20-jre8-alpine
    restart: true
    volumes:
      - volume:/usr/local/tomcat/webapps
      - web_data:/usr/local/tomcat/bin
      - vol:/etc/systemd/system
      - vol_tmp:/tmp
    ports:
      - "8081:8080"
      - "8088:8088"

- name: Stop a container build
  community.docker.docker_container:
    name: build
    state: stopped

- name: Remove a container build
  community.docker.docker_container:
    name: build
    state: absent

- name: Remove an image on Docker Hub
  community.docker.docker_image:
    name: syrkashevav/build
    tag: v1.0
    state: absent
