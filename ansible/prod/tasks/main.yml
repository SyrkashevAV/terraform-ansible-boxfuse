---
# tasks file for prod
- name: Install packages
  apt:
    pkg:
      - docker.io
      - python3-pip
    update_cache: yes
    state: present

- name: Pip install docker
  pip:
    name: docker

- name: Create a volume
  community.docker.docker_volume:
    name: volume

- name: Create a web_data
  community.docker.docker_volume:
    name: web_data

- name: Create a vol
  community.docker.docker_volume:
    name: vol

- name: Start a conteiner build
  community.docker.docker_container:
    name: build
    state: started
    image: syrkashevav/build:v1.0
    volumes:
      - volume:/workdir

- name: Start a conteiner tomcat
  community.docker.docker_container:
    name: tomcat
    state: started
    image: tomcat:9.0.20-jre8-alpine
    volumes:
      - volume:/usr/local/tomcat/webapps
      - web_data:/usr/local/tomcat/bin
      - vol:/etc/systemd/system
    ports: 8081:8080

- name: Modify catalina.sh to add the following
  lineinfile:
    dest: /var/lib/docker/volumes/web_data/_data/catalina.sh
    line: "{{ item }}"
    insertbefore: EOF
  with_items:
    - "\n"
    - 'CATALINA_OPTS="$CATALINA_OPTS -Dcom.sun.management.jmxremote'
    - '-Dcom.sun.management.jmxremote.port=8090'
    - '-Dcom.sun.management.jmxremote.ssl=false'
    - '-Dcom.sun.management.jmxremote.authenticate=false"'

- name: Download the catalina-jmx-remote.jar package
  get_url:
    url: http://archive.apache.org/dist/tomcat/tomcat-9/v9.0.8/bin/extras/catalina-jmx-remote.jar
    dest: /jarfile
  tags: pre-install

- name: Copy a jar-file into the container
  community.docker.docker_container_copy_into:
    container: tomcat
    path: /jarfile
    container_path: /usr/local/tomcat/lib/catalina-jmx-remote.jar

- name: Create tomcat group
  group:
    name: tomcat
    system: yes
    state: present

- name: Create tomcat user
  user:
    name: tomcat
    group: tomcat
    password: pa$$w0rd
    home: "{{ path_tomcat }}"
    shell: "/bin/bash"

- name: Change owner & group of tomcat directory
  file:
    path: "{{ path_tomcat }}"
    owner: tomcat
    group: tomcat
    recurse: yes

- name: Create empty Tomcat service file /etc/systemd/system/tomcat.service
  file:
    path: /var/lib/docker/volumes/vol/_data/tomcat.service
    state: touch

- name: Add tomcat service details in /etc/systemd/system/tomcat.service
  blockinfile:
    path: /var/lib/docker/volumes/vol/_data/tomcat.service
    block: |
      [Unit]
      Description=Tomcat 10
      After=network.target

      [Service]
      Type=forking
      User=tomcat
      Group=tomcat
      Environment=JAVA_HOME=/usr/lib/jvm/jre
      Environment='JAVA_OPTS=-Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom -Djava.rmi.server.hostname={{ ansible_ssh_host }} -Dcom.sun.management.jmxremote.rmi.port=12345 -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=12345 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.registry.ssl=false'
      Environment=CATALINA_BASE={{ path_tomcat }}
      Environment=CATALINA_HOME={{ path_tomcat }}
      Environment=CATALINA_PID={{ path_tomcat }}/temp/tomcat.pid
      Environment='CATALINA_OPTS=-Xms512M -Xmx3072M -Xss2M -server -XX:+UseParallelGC'

      ExecStart={{ path_tomcat }}/bin/startup.sh
      ExecStop={{ path_tomcat }}/bin/shutdown.sh

      [Install]
      WantedBy=multi-user.target

- name: Restart a container tomcat
  community.docker.docker_container:
    name: tomcat
    state: started
    image: tomcat:9.0.20-jre8-alpine
    restart: true
    volumes:
      - volume:/usr/local/tomcat/webapps
      - web_data:/usr/local/tomcat/bin
      - vol:/etc/systemd/system
    ports:
      - "8081:8080"

- name: Stop a container build
  community.docker.docker_container:
    name: build
    state: stopped

- name: Remove a container build
  community.docker.docker_container:
    name: build
    state: absent

- name: Remove an image on Docker Hub
  community.docker.docker_image:
    name: syrkashevav/build
    tag: v1.0
    state: absent
